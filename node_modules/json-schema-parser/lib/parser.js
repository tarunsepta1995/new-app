/// <reference path="./lib.d.ts" />
/// <reference path="../typings/core-js/core-js.d.ts" />
/// <reference path="../typings/node/node.d.ts" />
/// <reference path="../typings/json-pointer/json-pointer.d.ts" />
/// <reference path="./jsonschema.ts" />
var pointer = require("json-pointer");
function parse(schema, path) {
    if (path === void 0) { path = ""; }
    if (pointer.has(schema, path + "/$ref")) {
        resolveReference(schema, path);
        return schema;
    }
    var subschema = pointer.get(schema, path);
    Object.keys(subschema).forEach(function (k) {
        var v = subschema[k];
        switch (typeof v) {
            case "object":
                parse(schema, path + "/" + k);
                break;
            case "array":
                v.forEach(function (_, i) { return parse(schema, path + "/" + i); });
        }
    });
    return schema;
}
exports.parse = parse;
function resolveReference(schema, path) {
    var ref = pointer.get(schema, path + "/$ref").split('#')[1];
    parse(schema, ref);
    var def = pointer.get(schema, ref);
    pointer.set(schema, path, def);
}
//# sourceMappingURL=parser.js.map