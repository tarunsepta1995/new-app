declare module jsonschema {
    interface Schema {
        $ref?: string;
        id?: string;
        $schema?: string;
        title?: string;
        description?: string;
        default?: any;
        multipleOf?: number;
        maxinum?: number;
        exclusiveMaximum?: boolean;
        minimum?: number;
        exclusiveMinimum?: boolean;
        maxLength?: number;
        minLength?: number;
        pattern?: string;
        additionalItems?: boolean | Schema;
        items?: Schema | Schema[];
        maxItems?: number;
        minItems?: number;
        uniqueItems?: boolean;
        maxProperties?: number;
        minProperties?: number;
        required?: string[];
        additionalProperties?: boolean | Schema;
        definitions?: {
            [name: string]: Schema;
        };
        properties?: {
            [name: string]: Schema;
        };
        paternProperties?: {
            [name: string]: Schema;
        };
        dependencies?: {
            [name: string]: Schema;
        } | string[];
        enum?: string[];
        type?: SimpleType | SimpleType[];
        allOf?: Schema[];
        anyOf?: Schema[];
        oneOf?: Schema[];
        not?: Schema;
    }
    interface HyperSchema extends Schema {
        links?: LinkDescription[];
        fragmentResolution?: string;
        media?: {
            type: string;
            binaryEncoding: string;
        };
        pathStart?: string;
    }
    interface LinkDescription {
        href: string;
        rel: string;
        title?: string;
        targetSchema?: Schema;
        mediaType?: string;
        method?: string;
        encType?: string;
        schema?: Schema;
    }
    enum SimpleType {
        array,
        boolean,
        integer,
        null,
        number,
        object,
        string,
    }
}
