{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require(\"../utils\");\n\nvar _extractSubNavs = require(\"./extractSubNavs\");\n\nvar _extractSubNavs2 = _interopRequireDefault(_extractSubNavs);\n\nvar _extractTree = require(\"./extractTree\");\n\nvar _util = require(\"./util\");\n\nvar _extractSubUiSchema = require(\"./extractSubUiSchema\");\n\nvar _extractSubUiSchema2 = _interopRequireDefault(_extractSubUiSchema);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar NavTree = function NavTree(schema, uiSchema) {\n  _classCallCheck(this, NavTree);\n\n  _initialiseProps.call(this);\n\n  this.tree = (0, _extractTree.extractTree)(schema, uiSchema);\n  this.schema = schema;\n  this.uiSchema = uiSchema;\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  this.updateActiveNav = function (activeNavs, relTree) {\n    relTree = relTree ? relTree : (0, _extractTree.findRelTree)(_this.tree, activeNavs);\n    var orderedNavs = (0, _extractSubNavs.orderNavByName)(Object.keys(relTree), _this.uiSchema);\n    var nextNav = orderedNavs.find(function (nav) {\n      return nav !== _utils.GENERIC_NAV;\n    });\n\n    if (nextNav) {\n      activeNavs.push(nextNav);\n\n      _this.updateActiveNav(activeNavs, relTree[nextNav]);\n    }\n  };\n\n  this.findActiveNav = function (field) {\n    return (0, _utils.findFieldNavs)(field, _this.uiSchema).map(function (nav) {\n      return (0, _extractSubNavs.toNavConfOrDefault)(nav, _this.uiSchema);\n    });\n  };\n\n  this.buildUiSchema = function (activeNav, tree, uiSchema, onNavChange) {\n    var pos = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var navConfs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n\n    if (tree[_utils.GENERIC_NAV]) {\n      var _tree$GENERIC_NAV = tree[_utils.GENERIC_NAV],\n          fields = _tree$GENERIC_NAV.fields,\n          aliases = _tree$GENERIC_NAV.aliases;\n      (0, _extractSubUiSchema2.default)(fields, aliases, _this.uiSchema, uiSchema, _this.schema);\n\n      if (navConfs.length > 0) {\n        (0, _util.asNavField)(fields[0], navConfs, uiSchema);\n      }\n\n      navConfs = [];\n    }\n\n    if (activeNav.length === pos) {\n      return uiSchema;\n    }\n\n    var nextTree = tree[activeNav[pos]];\n    var nextNavConf = (0, _extractSubNavs2.default)(tree, _this.uiSchema, activeNav.slice(0, pos + 1), onNavChange);\n    return _this.buildUiSchema(activeNav, nextTree, uiSchema, onNavChange, pos + 1, navConfs.concat(nextNavConf));\n  };\n\n  this.toSubForms = function (activeNav, onNavChange) {\n    var hiddenUiSchema = (0, _util.toHiddenUiSchema)(_this.schema, _this.uiSchema);\n    return _this.buildUiSchema(activeNav, _this.tree, hiddenUiSchema, onNavChange);\n  };\n};\n\nexports.default = NavTree;","map":null,"metadata":{},"sourceType":"script"}