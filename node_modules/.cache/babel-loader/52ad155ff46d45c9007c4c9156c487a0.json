{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.default = applyPagination;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _render = require(\"./render\");\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _Navs = require(\"./render/Navs\");\n\nvar _Navs2 = _interopRequireDefault(_Navs);\n\nvar _splitter = require(\"./splitter\");\n\nvar _splitter2 = _interopRequireDefault(_splitter);\n\nvar _utils = require(\"./utils\");\n\nvar _errorHandler = require(\"./errorHandler\");\n\nvar _errorHandler2 = _interopRequireDefault(_errorHandler);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction applyPagination(FormComponent) {\n  var NavComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Navs2.default;\n  var FormWithNavs = (0, _render2.default)(FormComponent, NavComponent);\n\n  var FormWithPagination = function (_Component) {\n    _inherits(FormWithPagination, _Component);\n\n    function FormWithPagination(props) {\n      _classCallCheck(this, FormWithPagination);\n\n      var _this = _possibleConstructorReturn(this, (FormWithPagination.__proto__ || Object.getPrototypeOf(FormWithPagination)).call(this, props));\n\n      _initialiseProps.call(_this);\n\n      var _this$props = _this.props,\n          _this$props$formData = _this$props.formData,\n          formData = _this$props$formData === undefined ? {} : _this$props$formData,\n          schema = _this$props.schema,\n          uiSchema = _this$props.uiSchema,\n          activeNav = _this$props.activeNav;\n      activeNav = activeNav ? (0, _utils.toArray)(activeNav) : [];\n      _this.navTree = (0, _splitter2.default)(schema, uiSchema);\n\n      _this.navTree.updateActiveNav(activeNav, 0);\n\n      _this.shouldUpdate = false;\n      _this.formData = formData;\n      _this.state = {\n        activeNav: activeNav\n      };\n      return _this;\n    }\n\n    _createClass(FormWithPagination, [{\n      key: \"navTreeChanged\",\n      value: function navTreeChanged(_ref) {\n        var schema = _ref.schema,\n            uiSchema = _ref.uiSchema;\n        return !(0, _utils.deepEquals)(schema, this.props.schema) || !(0, _utils.deepEquals)(uiSchema, this.props.uiSchema);\n      }\n    }, {\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(nextProps) {\n        var _this2 = this;\n\n        if (this.props === nextProps) {\n          return;\n        }\n\n        if (this.navTreeChanged(nextProps)) {\n          this.navTree = (0, _splitter2.default)(nextProps.schema, nextProps.uiSchema);\n          this.shouldUpdate = true;\n        }\n\n        if (nextProps.activeNav && !(0, _utils.deepEquals)(nextProps.activeNav, this.state.activeNav)) {\n          this.setState(function () {\n            _this2.shouldUpdate = true;\n            return {\n              activeNav: (0, _utils.toArray)(nextProps.activeNav)\n            };\n          });\n        }\n\n        if (nextProps.formData && !(0, _utils.deepEquals)(this.formData, nextProps.formData)) {\n          this.formData = nextProps.formData;\n          this.shouldUpdate = true;\n        }\n      }\n    }, {\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate() {\n        if (this.shouldUpdate) {\n          this.shouldUpdate = false;\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var uiSchema = this.navTree.toSubForms(this.state.activeNav, this.handleNavChange);\n        var formProps = Object.assign({}, this.props, {\n          uiSchema: uiSchema,\n          transformErrors: (0, _errorHandler2.default)(this.navTree, this.props.transformErrors),\n          formData: this.formData,\n          onChange: this.handleOnChange\n        });\n        return _react2.default.createElement(FormWithNavs, formProps, this.props.children);\n      }\n    }]);\n\n    return FormWithPagination;\n  }(_react.Component);\n\n  var _initialiseProps = function _initialiseProps() {\n    var _this3 = this;\n\n    this.handleNavChange = function (activeNav) {\n      _this3.navTree.updateActiveNav(activeNav);\n\n      var oldNav = _this3.state.activeNav;\n\n      if ((0, _utils.deepEquals)(oldNav, activeNav)) {\n        return;\n      } else {\n        _this3.setState(function () {\n          _this3.shouldUpdate = true;\n          return {\n            activeNav: activeNav\n          };\n        });\n      }\n\n      if (_this3.props.onNavChange) {\n        _this3.props.onNavChange(activeNav, oldNav);\n      }\n    };\n\n    this.handleOnChange = function (state) {\n      _this3.formData = state.formData;\n\n      if (_this3.props.onChange) {\n        _this3.props.onChange(state);\n      }\n    };\n  };\n\n  FormWithPagination.propTypes = process.env.NODE_ENV !== \"production\" ? {\n    schema: _propTypes2.default.shape({\n      type: function type(props, propName, componentName) {\n        if (props[propName] !== \"object\") {\n          return new Error(\"Only \\\"object\\\" schemas supported by pagination for \" + componentName + \".\");\n        }\n      }\n    }),\n    onNavChange: _propTypes2.default.func,\n    uiSchema: _propTypes2.default.shape({\n      navConf: _propTypes2.default.shape({\n        aliases: _propTypes2.default.object,\n        navs: _propTypes2.default.array,\n        order: _propTypes2.default.array\n      })\n    })\n  } : {};\n  return FormWithPagination;\n}","map":null,"metadata":{},"sourceType":"script"}