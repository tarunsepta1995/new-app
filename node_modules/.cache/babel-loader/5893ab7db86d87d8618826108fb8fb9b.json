{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\nexports.toNavConf = toNavConf;\nexports.toNavConfOrDefault = toNavConfOrDefault;\nexports.orderNavByName = orderNavByName;\nexports.orderNavs = orderNavs;\nexports.buildNavs = buildNavs;\n\nvar _utils = require(\"../utils\");\n\nfunction toNavConf(nav, _ref) {\n  var _ref$navConf = _ref.navConf;\n  _ref$navConf = _ref$navConf === undefined ? {} : _ref$navConf;\n  var _ref$navConf$navs = _ref$navConf.navs,\n      navs = _ref$navConf$navs === undefined ? [] : _ref$navConf$navs;\n  return navs.find(function (conf) {\n    return conf.nav === nav;\n  });\n}\n\nfunction toNavConfOrDefault(nav, uiSchema) {\n  var navConf = toNavConf(nav, uiSchema);\n  return navConf ? navConf : {\n    nav: nav\n  };\n}\n\nfunction orderNavByName(navs, _ref2) {\n  var _ref2$navConf = _ref2.navConf;\n  _ref2$navConf = _ref2$navConf === undefined ? {} : _ref2$navConf;\n  var _ref2$navConf$order = _ref2$navConf.order,\n      order = _ref2$navConf$order === undefined ? [] : _ref2$navConf$order;\n\n  if (!order || order.length === 0) {\n    return navs;\n  }\n\n  var orderedNavs = navs.filter(function (nav) {\n    return order.includes(nav);\n  }).sort(function (a, b) {\n    return order.indexOf(a) - order.indexOf(b);\n  });\n\n  if (orderedNavs.length === 0) {\n    return navs;\n  }\n\n  if (orderedNavs.length == navs.length) {\n    return orderedNavs;\n  }\n\n  var nonOrderedNavs = navs.filter(function (nav) {\n    return !orderedNavs.includes(nav);\n  });\n  return orderedNavs.concat(nonOrderedNavs);\n}\n\nfunction orderNavs(navs, uiSchema) {\n  var navNames = navs.map(function (_ref3) {\n    var nav = _ref3.nav;\n    return nav;\n  });\n  var orderedNavs = orderNavByName(navNames, uiSchema);\n  return orderedNavs.map(function (ordNav) {\n    return navs.find(function (_ref4) {\n      var nav = _ref4.nav;\n      return nav === ordNav;\n    });\n  });\n}\n\nfunction buildNavs(tree, uiSchema, activeNav) {\n  var navs = Object.keys(tree).filter(function (nav) {\n    return nav !== _utils.GENERIC_NAV;\n  }).map(function (nav) {\n    return toNavConfOrDefault(nav, uiSchema);\n  }).map(function (nav) {\n    return Object.assign({\n      isActive: nav.nav === activeNav\n    }, nav);\n  });\n  var orderedNavs = orderNavs(navs, uiSchema);\n  return {\n    links: orderedNavs,\n    activeNav: activeNav\n  };\n}\n\nfunction extractSubNavs(tree, uiSchema, navPath, _onNavChange) {\n  var activeNav = navPath[navPath.length - 1];\n  var navs = buildNavs(tree, uiSchema, activeNav);\n\n  if (navs && navs.links.length > 0) {\n    return {\n      navs: navs,\n      onNavChange: function onNavChange(nav) {\n        var selectedNav = navPath.length === 0 ? [nav] : navPath.slice(0, navPath.length - 1).concat([nav]);\n\n        _onNavChange(selectedNav);\n      }\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexports.default = extractSubNavs;","map":null,"metadata":{},"sourceType":"script"}