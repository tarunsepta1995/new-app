{"ast":null,"code":"/// <reference path=\"./lib.d.ts\" />\n/// <reference path=\"../typings/core-js/core-js.d.ts\" />\n/// <reference path=\"../typings/node/node.d.ts\" />\n/// <reference path=\"../typings/json-pointer/json-pointer.d.ts\" />\n/// <reference path=\"./jsonschema.ts\" />\nvar pointer = require(\"json-pointer\");\n\nfunction parse(schema, path) {\n  if (path === void 0) {\n    path = \"\";\n  }\n\n  if (pointer.has(schema, path + \"/$ref\")) {\n    resolveReference(schema, path);\n    return schema;\n  }\n\n  var subschema = pointer.get(schema, path);\n  Object.keys(subschema).forEach(function (k) {\n    var v = subschema[k];\n\n    switch (typeof v) {\n      case \"object\":\n        parse(schema, path + \"/\" + k);\n        break;\n\n      case \"array\":\n        v.forEach(function (_, i) {\n          return parse(schema, path + \"/\" + i);\n        });\n    }\n  });\n  return schema;\n}\n\nexports.parse = parse;\n\nfunction resolveReference(schema, path) {\n  var ref = pointer.get(schema, path + \"/$ref\").split('#')[1];\n  parse(schema, ref);\n  var def = pointer.get(schema, ref);\n  pointer.set(schema, path, def);\n}","map":null,"metadata":{},"sourceType":"script"}