{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchField = fetchField;\n\nfunction fetchField(_ref) {\n  var property = _ref.property,\n      argument = _ref.argument;\n\n  if (property === \"instance\") {\n    return argument;\n  } else {\n    var fullField = property.startsWith(\"instance\") ? property.substring(9) : property.substring(1);\n    var nextArrSep = fullField.indexOf(\"[\");\n    var nextFieldSep = fullField.indexOf(\".\");\n    var nextSeparator = nextArrSep != -1 && nextFieldSep != -1 ? Math.min(nextArrSep, nextFieldSep) : Math.max(nextArrSep, nextFieldSep);\n\n    if (nextSeparator === -1) {\n      return fullField;\n    } else {\n      return fullField.substring(0, nextSeparator);\n    }\n  }\n}\n\nvar errorHandler = function errorHandler(navTree, transformErrors) {\n  return function (errors) {\n    var errorsWithNav = errors.map(function (error) {\n      var field = fetchField(error);\n      var activeNav = navTree.findActiveNav(field);\n\n      if (activeNav && activeNav.length > 0) {\n        return Object.assign({\n          activeNav: activeNav\n        }, error);\n      } else {\n        return error;\n      }\n    });\n\n    if (transformErrors) {\n      return transformErrors(errorsWithNav);\n    } else {\n      return errorsWithNav;\n    }\n  };\n};\n\nexports.default = errorHandler;","map":null,"metadata":{},"sourceType":"script"}